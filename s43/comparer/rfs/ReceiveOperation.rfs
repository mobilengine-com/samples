server program ReceiveOperation for dacs ReceiveOperation

using reftab lcomp;
using reftab project;
using reftab folder;
using reftab floorplan;
using reftab point;
using reftab ticket;
using reftab ticketPhoto;
using reftab user;
using reftab userLcomp;
using reftab userProject;
using reftab userFolder;
using dacs SendSyncCru;

{
	trace dacs;
	if (dacs.Operation.ticketComment != null) {
		var ticketGuid = dacs.Operation.ticketComment.ticketGuid;
		var comment = dacs.Operation.ticketComment.comment;
		var user = dacs.Operation.ticketComment.user;
		var ticket = db.ticket.Read({guid: ticketGuid}).SingleOrDefault();
		if (ticket != null) {
			ticket.comments = (ticket.comments != null ? (ticket.comments??"") +"\n" : "") +"\n" +comment+" ("+user+")";
			db.ticket.Update({guid: ticketGuid}, ticket);
			// send dacs: packet
			var syncDacs = messages.SendSyncCru.New();
			syncDacs.Packet.guid = ticket.guid;
			syncDacs.Packet.guidLcomp = dacs.Operation.guidLcomp;
			syncDacs.Packet.guidProject = dacs.Operation.guidProject;
			syncDacs.Packet.guidFolder = dacs.Operation.guidFolder;
			syncDacs.Packet.ticketNew();
			foreach ( var key in ticket.Keys() ) {
				var val = ticket[key];
				if (TypeOf(val) == "dtdb") {
					val = val.DeclareAsDtl();
				} else if (TypeOf(val) == "fileref") {
					val = val.ToString();
				}
				syncDacs.Packet.ticket[key] = val;
			}
			syncDacs.Send();
		}
	}
	else if (dacs.Operation.ticketAssign != null) {
		var ticketGuid = dacs.Operation.ticketAssign.ticketGuid;
		var guidUserAssignee = dacs.Operation.ticketAssign.guidUserAssignee;
		var user = dacs.Operation.ticketAssign.user;
		var ticket = db.ticket.Read({guid: ticketGuid}).SingleOrDefault();
		if (ticket != null) {
			ticket.guidUserAssignee = guidUserAssignee;
			db.ticket.Update({guid: ticketGuid}, ticket);
			// send dacs: packet
			var syncDacs = messages.SendSyncCru.New();
			syncDacs.Packet.guid = ticket.guid;
			syncDacs.Packet.guidLcomp = dacs.Operation.guidLcomp;
			syncDacs.Packet.guidProject = dacs.Operation.guidProject;
			syncDacs.Packet.guidFolder = dacs.Operation.guidFolder;
			syncDacs.Packet.ticketNew();
			foreach ( var key in ticket.Keys() ) {
				var val = ticket[key];
				if (TypeOf(val) == "dtdb") {
					val = val.DeclareAsDtl();
				} else if (TypeOf(val) == "fileref") {
					val = val.ToString();
				}
				syncDacs.Packet.ticket[key] = val;
			}
			syncDacs.Send();
		}
	}
	else if (dacs.Operation.ticketToStatus != null) {
		var ticketGuid = dacs.Operation.ticketToStatus.ticketGuid;
		var status = dacs.Operation.ticketToStatus.status;
		var user = dacs.Operation.ticketToStatus.user;
		var ticket = db.ticket.Read({guid: ticketGuid}).SingleOrDefault();
		if (ticket != null) {
			ticket.status = status;
			db.ticket.Update({guid: ticketGuid}, ticket);
			// send dacs: packet
			var syncDacs = messages.SendSyncCru.New();
			syncDacs.Packet.guid = ticket.guid;
			syncDacs.Packet.guidLcomp = dacs.Operation.guidLcomp;
			syncDacs.Packet.guidProject = dacs.Operation.guidProject;
			syncDacs.Packet.guidFolder = dacs.Operation.guidFolder;
			syncDacs.Packet.ticketNew();
			foreach ( var key in ticket.Keys() ) {
				var val = ticket[key];
				if (TypeOf(val) == "dtdb") {
					val = val.DeclareAsDtl();
				} else if (TypeOf(val) == "fileref") {
					val = val.ToString();
				}
				syncDacs.Packet.ticket[key] = val;
			}
			syncDacs.Send();
		}
	}

}